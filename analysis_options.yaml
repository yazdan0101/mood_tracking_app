# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    always_use_package_imports: true
    avoid_relative_lib_imports: true
    always_put_required_named_parameters_first: true
    always_put_control_body_on_new_line: true
    always_declare_return_types: true
    avoid_multiple_declarations_per_line: true
    avoid_redundant_argument_values: true
    combinators_ordering: true
    cascade_invocations: true
    dangling_library_doc_comments: true
    directives_ordering: true
    eol_at_end_of_file: true
    library_annotations: true
    leading_newlines_in_multiline_strings: true
    no_literal_bool_comparisons: true
    omit_local_variable_types: true
    prefer_expression_function_bodies: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_final_parameters: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_single_quotes: true
    prefer_void_to_null: false
    require_trailing_commas: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    unnecessary_breaks: true
    unnecessary_null_checks: true
    unnecessary_to_list_in_spreads: true
    secure_pubspec_urls: true
    sort_pub_dependencies: true


analyzer:
  errors:
    invalid_annotation_target: ignore